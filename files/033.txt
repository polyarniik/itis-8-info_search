<!DOCTYPE html>

<html data-vue-meta="%7B%22lang%22:%7B%22ssr%22:%22ru%22%7D%7D" lang="ru">
<head>
<meta charset="utf-8"/>
<meta content="width=device-width,initial-scale=1.0,viewport-fit=cover,maximum-scale=1,user-scalable=0" name="viewport"/>
<meta content="unsafe-url" name="referrer"/>
<title>Готовим версионирование API в PHP-фреймворках: разбор способов и работа с организацией кода / Хабр</title>







<meta content="2.113.0" name="habr-version"/>
<meta content="444736788986613" data-vue-meta="ssr" property="fb:app_id"/><meta content="472597926099084" data-vue-meta="ssr" property="fb:pages"/><meta content="summary_large_image" data-vue-meta="ssr" name="twitter:card"/><meta content="@habr_com" data-vue-meta="ssr" name="twitter:site"/><meta content="Хабр" data-vmid="og:site_name" data-vue-meta="ssr" property="og:site_name"/><meta content="Готовим версионирование API в PHP-фреймворках: разбор способов и работа с организацией кода" data-vmid="og:title" data-vue-meta="ssr" property="og:title"/><meta content="Готовим версионирование API в PHP-фреймворках: разбор способов и работа с организацией кода" data-vmid="twitter:title" data-vue-meta="ssr" name="twitter:title"/><meta content="Готовим версионирование API в PHP-фреймворках: разбор способов и работа с организацией кода" data-vmid="aiturec:title" data-vue-meta="ssr" name="aiturec:title"/><meta content="Привет! Меня зовут Олег Мифле. В&amp;nbsp;Skyeng работаю над проектом Skypro. В&amp;nbsp;IT я уже больше десяти лет, семь из&amp;nbsp;которых пишу на&amp;nbsp;PHP. За&amp;nbsp;плечами десятки разных проектов:..." data-vmid="description" data-vue-meta="ssr" name="description"/><meta content="Привет! Меня зовут Олег Мифле. В&amp;nbsp;Skyeng работаю над проектом Skypro. В&amp;nbsp;IT я уже больше десяти лет, семь из&amp;nbsp;которых пишу на&amp;nbsp;PHP. За&amp;nbsp;плечами десятки разных проектов:..." data-vmid="description:itemprop" data-vue-meta="ssr" itemprop="description"/><meta content="Привет! Меня зовут Олег Мифле. В&amp;nbsp;Skyeng работаю над проектом Skypro. В&amp;nbsp;IT я уже больше десяти лет, семь из&amp;nbsp;которых пишу на&amp;nbsp;PHP. За&amp;nbsp;плечами десятки разных проектов:..." data-vmid="og:description" data-vue-meta="ssr" property="og:description"/><meta content="Привет! Меня зовут Олег Мифле. В&amp;nbsp;Skyeng работаю над проектом Skypro. В&amp;nbsp;IT я уже больше десяти лет, семь из&amp;nbsp;которых пишу на&amp;nbsp;PHP. За&amp;nbsp;плечами десятки разных проектов:..." data-vmid="twitter:description" data-vue-meta="ssr" name="twitter:description"/><meta content="Привет! Меня зовут Олег Мифле. В&amp;nbsp;Skyeng работаю над проектом Skypro. В&amp;nbsp;IT я уже больше десяти лет, семь из&amp;nbsp;которых пишу на&amp;nbsp;PHP. За&amp;nbsp;плечами десятки разных проектов:..." data-vmid="aiturec:description" data-vue-meta="ssr" property="aiturec:description"/><meta content="https://habrastorage.org/getpro/habr/upload_files/c7c/ea1/3d7/c7cea13d70819be990795e195f7b4031.png" data-vmid="image:itemprop" data-vue-meta="ssr" itemprop="image"/><meta content="https://habrastorage.org/getpro/habr/upload_files/c7c/ea1/3d7/c7cea13d70819be990795e195f7b4031.png" data-vmid="og:image" data-vue-meta="ssr" property="og:image"/><meta content="1200" data-vmid="og:image:width" data-vue-meta="ssr" property="og:image:width"/><meta content="630" data-vmid="og:image:height" data-vue-meta="ssr" property="og:image:height"/><meta content="https://habrastorage.org/getpro/habr/upload_files/c7c/ea1/3d7/c7cea13d70819be990795e195f7b4031.png" data-vmid="aiturec:image" data-vue-meta="ssr" property="aiturec:image"/><meta content="https://habrastorage.org/getpro/habr/upload_files/c7c/ea1/3d7/c7cea13d70819be990795e195f7b4031.png" data-vmid="twitter:image" data-vue-meta="ssr" name="twitter:image"/><meta content="https://habrastorage.org/getpro/habr/upload_files/c7c/ea1/3d7/c7cea13d70819be990795e195f7b4031.png?format=vk" data-vmid="vk:image" data-vue-meta="ssr" property="vk:image"/><meta content="718374" data-vmid="aiturec:item_id" data-vue-meta="ssr" property="aiturec:item_id"/><meta content="2023-02-22T10:31:51.000Z" data-vmid="aiturec:datetime" data-vue-meta="ssr" property="aiturec:datetime"/><meta content="https://habr.com/ru/company/skyeng/blog/718374/" data-vmid="og:url" data-vue-meta="ssr" property="og:url"/><meta content="article" data-vmid="og:type" data-vue-meta="ssr" property="og:type"/><meta content="ru_RU" data-vmid="og:locale" data-vue-meta="ssr" property="og:locale"/><meta content="php, api, rest, architecture" data-vue-meta="ssr" name="keywords"/>

<meta content="#303b44" name="apple-mobile-web-app-status-bar-style"/>
<meta content="#629FBC" name="msapplication-TileColor"/>
<meta content="yes" name="apple-mobile-web-app-capable"/>
<meta content="yes" name="mobile-web-app-capable"/>
































</head>
<body>
<div data-async-called="true" data-server-rendered="true" id="app"><div class="tm-layout__wrapper"><!-- --> <div></div> <div class="tm-feature tm-feature"><!-- --></div> <header class="tm-header"><div class="tm-page-width"><div class="tm-header__container"><div class="tm-header__burger-nav"><button class="tm-header__button tm-header__button_burger" type="button"><svg class="tm-svg-img tm-header__icon tm-header__icon-burger" height="16" width="16"><title>Меню</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#header-burger"></use></svg></button></div> <span class="tm-header__logo-wrap"><a class="tm-header__logo tm-header__logo_ru" href="/ru/"><svg class="tm-svg-img tm-header__icon" height="16" width="16"><title>Хабр</title> <use xlink:href="/img/habr-logo-ru.svg#logo"></use></svg></a> <span class="tm-header__beta-sign" style="display:none;">β</span></span> <!-- --> <div class="tm-header-user-menu tm-header_user-menu"><a class="tm-header-user-menu__item tm-header-user-menu__search" href="/ru/search/"><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_search" height="24" width="24"><title>Поиск</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#search"></use></svg></a> <!-- --> <!-- --> <!-- --> <div class="tm-header-user-menu__item"><button class="tm-header-user-menu__toggle" data-test-id="menu-toggle-guest"><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_white" height="24" width="24"><title>Профиль</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#header-user"></use></svg></button> <!-- --></div> <!-- --></div></div></div></header> <div class="tm-layout"><div class="tm-page-progress-bar"></div> <!-- --> <!-- --> <div class="tm-page-width"></div> <main class="tm-layout__container"><div class="tm-page" companyname="skyeng" data-async-called="true" hl="ru"><div class="tm-page-width"><div class="tm-page__header"><div class="tm-company-card__branding tm-company-article__branding tm-company-card__branding_loading"><div class="tm-company-card__branding-placeholder"><!-- --></div> <img class="tm-company-card__branding-image" src="//habrastorage.org/getpro/habr/branding/d14/771/fcb/d14771fcbb9bf692bf064820728d59b1.jpg" width="100%"/></div></div> <div class="tm-page__wrapper"><div class="tm-page__main tm-page__main_has-sidebar"><div class="pull-down"><!-- --> <div class="pull-down__header" style="height:0px;"><div class="pull-down__content" style="bottom:10px;"><svg class="tm-svg-img pull-down__arrow" height="24" width="24"><title>Обновить</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#pull-arrow"></use></svg></div></div> <div class="tm-article-presenter"> <div class="tm-article-presenter__body"><div class="tm-misprint-area"><div class="tm-misprint-area__wrapper"><article class="tm-article-presenter__content tm-article-presenter__content_narrow"><div class="tm-article-presenter__header"> <div class="tm-article-snippet tm-article-presenter__snippet tm-article-snippet"><div class="tm-article-snippet__meta-container"><div class="tm-article-snippet__meta"><span class="tm-user-info tm-article-snippet__author"><a class="tm-user-info__userpic" href="/ru/users/OlegMifle/" title="OlegMifle"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" height="32" src="//habrastorage.org/r/w32/getpro/habr/avatars/793/120/165/793120165280a5957b525e6a979933cc.jpg" width="32"/></div></a> <span class="tm-user-info__user"><a class="tm-user-info__username" href="/ru/users/OlegMifle/">
      OlegMifle
      <!-- --></a> <span class="tm-article-datetime-published"><time datetime="2023-02-22T10:31:51.000Z" title="2023-02-22, 13:31">9 часов назад</time></span></span></span></div> <!-- --></div> <h1 class="tm-article-snippet__title tm-article-snippet__title_h1" lang="ru"><span>Готовим версионирование API в PHP-фреймворках: разбор способов и работа с организацией кода</span></h1> <div class="tm-article-snippet__stats"><div class="tm-article-complexity tm-article-complexity_complexity-low"><span class="tm-svg-icon__wrapper tm-article-complexity__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Уровень сложности</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#complexity-low"></use></svg></span> <span class="tm-article-complexity__label">
    Простой
  </span></div> <div class="tm-article-reading-time"><span class="tm-svg-icon__wrapper tm-article-reading-time__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Время на прочтение</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#clock"></use></svg></span> <span class="tm-article-reading-time__label">
    13 мин
  </span></div> <span class="tm-icon-counter tm-data-icons__item"><svg class="tm-svg-img tm-icon-counter__icon" height="24" width="24"><title>Количество просмотров</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#counter-views"></use></svg> <span class="tm-icon-counter__value">1K</span></span></div> <div class="tm-article-snippet__hubs-container"><div class="tm-article-snippet__hubs"><span class="tm-article-snippet__hubs-item"><a class="tm-article-snippet__hubs-item-link router-link-active" href="/ru/company/skyeng/blog/"><span>Блог компании Skyeng</span> <!-- --></a></span><span class="tm-article-snippet__hubs-item"><a class="tm-article-snippet__hubs-item-link" href="/ru/hub/webdev/"><span>Разработка веб-сайтов</span> <span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span></a></span><span class="tm-article-snippet__hubs-item"><a class="tm-article-snippet__hubs-item-link" href="/ru/hub/php/"><span>PHP</span> <span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span></a></span><span class="tm-article-snippet__hubs-item"><a class="tm-article-snippet__hubs-item-link" href="/ru/hub/symfony/"><span>Symfony</span> <span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span></a></span></div></div> <div class="tm-article-snippet__labels-container"><div class="tm-article-snippet__labels"><div class="tm-article-snippet__label tm-article-snippet__label_variant-review"><span>
          Обзор
        </span></div> </div></div> <!-- --> <!-- --></div></div> <!-- --> <div class="tm-article-body" data-gallery-root="" lang="ru"><div></div> <div id="post-content-body"><div><div class="article-formatted-body article-formatted-body article-formatted-body_version-2"><div xmlns="http://www.w3.org/1999/xhtml"><p>Привет! Меня зовут Олег Мифле. В Skyeng работаю над проектом Skypro. В IT я уже больше десяти лет, семь из которых пишу на PHP. За плечами десятки разных проектов: e‑commerce, финтех, CRM, а недавно добавился и EdTech. Были и классические фуллстек‑проекты, и проекты, где фронтенд и бэкенд «живут» отдельно и коммуницируют друг с другом по API. Боль от отсутствия версионирования я испытал на себе. Хочу поделиться, как избежать проблем, как всё структурировать и организовать.</p><p>Обсудим:</p><ul><li><p>Что такое API.</p></li><li><p>Зачем версионировать API и нужно ли вообще.</p></li><li><p>Какие способы версионирования существуют и как его организовать — и с точки зрения подходов, и с точки зрения кода.</p></li><li><p>Разберёмся, когда избавляться от старой версии или как жить с легаси до конца существования проекта.</p></li></ul><p><em>Это статья по моему докладу с первого сезона Podlodka PHP Crew.</em> <em>27 февраля стартует </em><a href="https://podlodka.io/phpcrew?utm_campaign=main_php_crew_2&amp;utm_source=%D1%81%D0%B0%D0%B9%D1%82&amp;utm_medium=social&amp;utm_content=skyeng_habr"><em>второй сезон</em></a><em> </em><a href="https://podlodka.io/phpcrew?utm_campaign=main_php_crew_2&amp;utm_source=%D1%81%D0%B0%D0%B9%D1%82&amp;utm_medium=social&amp;utm_content=skyeng_habr"><em>конференции</em></a><em>. Тема — «Инструменты разработки», там расскажу про популярные инструменты анализа кода. И полезный чит: если ввести код SKYENG — будет небольшая скидка на билет :)</em></p><h2>Что такое API</h2><p>Когда мы обсуждали API с программистами из разных сфер, часто выяснялось, что мы говорим про разные вещи. Но в современном понимании API — это любой интерфейс, позволяющий взаимодействовать двум программным компонентам.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/ba1/c3b/a03/ba1c3ba03eb21706a4e5dab3206931fd.png" height="876" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/ba1/c3b/a03/ba1c3ba03eb21706a4e5dab3206931fd.png" width="1560"><figcaption></figcaption></img></figure><p>При этом API — это не только REST. Взаимодействие между модулями в приложении тоже происходит через API. Когда вы используете интерфейс, чтобы клиенты подключались к модулю, задействуется API этого модуля. Если вам приходилось писать что‑то для операционной системы — таск‑менеджер, менеджер файлов, консольную утилиту — то наверняка вы использовали API операционной системы, то есть интерфейс для доступа к ней. Но чаще всего при обсуждении API речь идёт о Web API — REST, SOAP и других http‑взаимодействиях.</p><h2>Зачем и как версионировать API</h2><p>Для начала поделюсь историей из собственного опыта. </p><p>Я работал на проекте, где фронтенд и бэкенд существовали отдельно и деплоились по‑разному. У нас была задача немного изменить форму, в которой создавались тикеты. Для этого нужно было изменить контракт. Особенность проекта в том, что бэкенд деплоился достаточно быстро, это занимало минуту‑полторы, а с фронтендом было сложнее, он деплоился долго — 10–15 минут.</p><p>В контракте в форме нужно было выбрать ученика, его услугу и тему обращения в поддержку. Это было просто. Но бизнес развивался, тем обращений становилось всё больше. Чтобы их категоризировать, решили сделать отдел, который обрабатывает эти обращения: сначала выбирали отдел, потом тему. Так из одного контракта мы хотели получить немного другой.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/183/784/485/183784485606d739119c91ff93ca32a8.png" height="871" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/183/784/485/183784485606d739119c91ff93ca32a8.png" width="1560"><figcaption></figcaption></img></figure><p>Задача достаточно тривиальная. Каждый, наверное, делал что-то подобное. Вот и мы сделали и успешно вынесли на ревью, отдали в тестирование, задеплоили.</p><p>Но мы забыли про обратную совместимость, из-за чего прод практически 15 минут лежал, создавать задачи было невозможно. В Slack disaster, у всех паника. Через 15 минут всё нормализовалось, но инцидент оставил неприятный осадок.</p><p>Этого всего можно было избежать, если заранее подумать об обратной совместимости и версионировании.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/bf4/17e/694/bf417e694a46aa705c5da0a448e1a54a.png" height="869" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/bf4/17e/694/bf417e694a46aa705c5da0a448e1a54a.png" width="1560"/><figcaption></figcaption></figure><p>Откуда берётся необходимость версионирования, почему данные меняются?</p><ul><li><p>Данные эволюционируют в процессе работы систем. От одного формата мы переходим к другому, это влияет на контракты, а контракты меняются.</p></li><li><p>Бизнес развивается, хочет иначе видеть взаимодействие, появляются новые запросы. Всё это отражается на контрактах API.</p></li><li><p>Система эволюционирует, мы пробуем новые технологии, что‑то меняем и улучшаем — это отражается на всех частях системы, в том числе на контрактах.</p></li></ul><p>Конечно, код можно дополнить разными условиями. Но это сделает из проекта большой ком грязи, а наша задача — этого не допустить. Без версионирования стоимость поддержки будет постоянно расти. Слишком большое количество условий приведёт к тому, что код будет очень хрупким — изменения в одной части сломают что‑то в другой.</p><p>Обратная совместимость очень важна не только для разработчиков, но и для клиентов, которые эксплуатируют наши API. Ведь кроме риска сломать что‑то на стороне клиента существует риск навредить этим его репутации.</p><h2>Какие способы версионирования существуют</h2><p>Разберём несколько способов на реальных примерах кода:</p><h4>«Свой космолёт»</h4><p>Этот способ я называю «Построить свой космолёт», и он часто первым приходит в голову при мысли о версионировании. Это отличное приключение, писать свой проект обычно весело. Но это не всегда проходит гладко и заканчивается хорошо.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/3c5/369/a14/3c5369a14e9bc59542b7b7b2eca00403.png" height="878" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/3c5/369/a14/3c5369a14e9bc59542b7b7b2eca00403.png" width="1560"/><figcaption></figcaption></figure><p>Большой соблазн — использовать много условий, if, потому что хочется делать всё быстро, бизнесу надо получить моментальный результат.</p><p>Допустим, мы сделали какой-нибудь параметр и проверяем его. Потом добавился новый параметр, который тоже нужно проверить. А завтра добавится третий — так код будет постоянно расти и очень скоро legacy будет уже не контролируемым.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/5db/fc1/1c1/5dbfc11c177481144c7826106356d7de.png" height="877" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/5db/fc1/1c1/5dbfc11c177481144c7826106356d7de.png" width="1560"/><figcaption></figcaption></figure><p>Можно пойти путём наследования. У нас есть контроллер первой версии, мы тащим контроллер второй и наследуем его от первой. Дополнительно можно добавлять условия, но цепочка наследования становится слишком длинной и управлять ей сложно, если версий больше трёх.</p><p>Техдолг такого решения будет накапливаться как снежный ком — не вы будете управлять им, а он вами. Порог входа в такой проект повышается, потому что со своими «велосипедами» всегда нужно разбираться самостоятельно — писать документацию, если есть такая возможность. Но новым разработчикам придётся во всём этом разбираться. Стоимость поддержки повышается, потому что изменения в одной части системы могут легко сломать любую другую часть.</p><p>«Строить свой космолёт» увлекательно, но лучше с этим не заигрываться.</p><h4>Feature-флаги</h4><p><strong>Фича‑флаги</strong> (Feature Flags) — способ версионирования, когда явных версий нет — v1, v2 и так далее. Есть фича‑флаги, которые клиент сообщает на сервер. А сервер сам решает, как с ними работать: как обработать запрос и как отдать response.</p><p>Плюсы такого способа — всё получается достаточно гибко, и встроить в проект можно относительно быстро. Это решает проблему обратной совместимости, но и повышает порог входа. Когда фич становится много, их нужно уметь сочетать друг с другом, а сочетаются они не всегда. А значит, снова нужно писать документацию, которая постоянно под рукой. Для новичков проект может обернуться дополнительными сложностями при входе. Онбординг, соответственно, дорожает.</p><h4>VCS-версионирование</h4><p>Следующий способ — <strong>версионирование через систему контроля версий</strong>. Любая git‑система из коробки поддерживает теги, и вот этими тегами можно пользоваться для того, чтобы апнуть версию. Это достаточно легко реализуется в любом проекте.</p><p>Преимущество подхода — это легко и быстро. Закоммитили, запушили, поставили тэг — всё, новая версия готова. Потом раскатили каждую версию на свои инстансы, и всё сработало как надо. А если на какую‑то версию нагрузка больше, чем на другую, можно её масштабировать как нужно, а остальные не трогать. Это может обернуться дополнительным преимуществом.</p><p>Но у такой системы есть ряд недостатков. Например, доставка фиксов усложняется, потому что исправления нужно раскатывать на все версии. Чем больше таких версий в системе, тем сложнее эти фиксы доставлять. Для начала можно воспользоваться cherry‑pick, а потом этого может быть уже недостаточно.</p><p>Соответственно, чем больше система, чем больше версий, тем сложнее всё это поддерживать и развивать. Каждую версию нужно мониторить, каждую версию как‑то уметь посмотреть, развернуть, задеплоить, поддержать, а значит, расходы на инфраструктуру растут.</p><p>Такая система достаточно удобна для микросервисов. Когда у вас не очень развита система API и в целом сервис небольшой, то это очень неплохой вариант.</p><h4>Blueprints-версионирование</h4><p>Термин <strong>Blueprints-версионирование</strong> был введён в сообщество около года назад, когда со своим докладом выступили коллеги из Superjob на PHP Russia. Подход довольно обнадеживающий и очень удобный.</p><p>Есть файл — какой-то конфиг, который вам больше нравится, где происходит описание: взаимодействие контрактов, что получать, что отдавать, как валидировать и так далее. Всё хорошо, но всё равно это разновидность своего велосипеда.</p><p>Преимущество в том, что реализовать это несложно. Достаточно научиться читать конфиг, а потом всё это подружить с контроллерами и работать. Поддерживать тоже легко: есть конфиг и остальной код. Выглядит вполне неплохо.</p><p>Но у любых «велосипедов» есть недостаток. Если open-source-решения развиваются силами сообщества, своё решение нужно развивать силами только своей команды. Если такое решение будет на нескольких проектах, доработки и фиксы нужно будет раскатывать на каждый проект.</p><p>Вот пример конфигурации, который коллеги приводили на конференции. Я не стал его менять, всё достаточно наглядно:</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/2e1/2fd/deb/2e12fddebc6910096dc58366194a599f.png" height="873" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/2e1/2fd/deb/2e12fddebc6910096dc58366194a599f.png" width="1560"/><figcaption></figcaption></figure><p>У нас есть описания эндпоинтов, в примере есть user, у него есть методы get и patch, class c action, query, filters, сортировки — описание какого-то контракта.</p><h4>Через явное указание версии</h4><p>Версии в явном виде можно указывать в заголовках, в get-параметрах и в url. Этот способ версионирования мне кажется достаточно удобным и гибким. Предлагаю рассмотреть его чуть более подробно.</p><p><strong>1. Явное указание версии в заголовке.</strong> Указание кастомного заголовка.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/38a/cef/07e/38acef07e477efa228d096cb586f3cff.png" height="496" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/38a/cef/07e/38acef07e477efa228d096cb586f3cff.png" width="1560"/><figcaption></figcaption></figure><p>Допустим, берём заголовок Api-Version 3, не забываем про заголовок Vary, чтобы клиентское приложение, например, браузер, могло сбросить кэш. Вот эти кастомные заголовки на кэш никах не повлияют.</p><p>Выглядит как рабочий инструмент. Но что делать, если этот кастомный заголовок не передали? Отвечать ошибкой, не отвечать, отвечать последней версией, первой версией — не ясно.</p><p>Есть более стандартизированный подход — Content Negotiation. Там можно указать стандартизированный заголовок Accept: application/vhd, далее ключ своего проекта и тип данных JSON, а затем указываем версию.</p><p>Выглядит удобно и стандартизировано. Но у Content Negotiation есть определённые проблемы.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/0a2/e68/34d/0a2e6834db590f2068dd1a7058eece11.png" height="605" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/0a2/e68/34d/0a2e6834db590f2068dd1a7058eece11.png" width="1560"/><figcaption></figcaption></figure><p>Заголовков может быть несколько. Их количество никак не регламентировано. То есть в заголовках можно написать противоречивые данные. Что делать, если я в заголовках хочу указать и JSON, и xml? А что, если будут разные версии — в одном вторая, в другом первая? А если Content-Type противоречит заголовку Accept? На все эти вопросы нет ответа, потому что это никак не регламентировано. Ответы придётся искать самостоятельно.</p><p>У Accept есть q-параметр, который регулирует вес. Последовательность в заголовке Accept тоже имеет значение. То есть version перед q и после q — две разные версии, которые по-разному интерпретируются. В общем, с заголовками есть определённые сложности, но тем не менее это решение более стандартизированное, чем прошлые решения.</p><p>В случае с Content Negotiation есть ошибка 406 Not Acceptable. В других случаях нет никакого стандарта и отвечать можно по-разному: ошибка 400, например. При этом ответе кажется, что повторение запроса не приведет к изменениям — выглядит валидно. Ещё можно ответить 412 Precondition Failed или как-то иначе. Но в целом от проекта к проекту последовательности нет.</p><p>Важно понимать, что кастомный заголовок может быть отфильтрован. Если вы используете прокси, кастомный заголовок может потеряться: клиент его передал, а сервер не получил. Тогда нужно настраивать фильтр. Но это может привести к проблемам.</p><p><strong>2. Через get-параметр.</strong> В этом случае можно потерять version, и что делать — не очень понятно. Можно отдать первую или последнюю версию API. Но при отдаче последней версии есть вероятность наткнуться на потерю обратной совместимости.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/50c/f79/3b2/50cf793b2a8bd0896e0520c51bf1299d.png" height="334" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/50c/f79/3b2/50cf793b2a8bd0896e0520c51bf1299d.png" width="1560"/><figcaption></figcaption></figure><p><strong>3. Явное указание версии в пути.</strong> Можно указать её в поддомене, а можно прямо в URL. Версия в поддомене подойдёт совместно с версионированием через систему контроля версий. Можно даже автоматизировать таким образом деплой.</p><p>Версия в пути выделяется определённым преимуществом по сравнению с остальными. Такой подход поддерживается во всех PHP-фреймворках в отличие от заголовка и прочего. Версионирование через путь можно реализовать в принципе везде, а вот заголовки — только если прикрутить что-то своё или поискать существующее решение, несколько готовых пакетов. Коробочного решения я не встречал.</p><p>Что отвечать в случае неуказания версии в пути, понятно: 404, такого эндпоинта не существует, укажите версию и всё будет хорошо.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/7bb/3fa/0af/7bb3fa0af525d72d81c82c604e59be0f.png" height="457" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/7bb/3fa/0af/7bb3fa0af525d72d81c82c604e59be0f.png" width="1560"/><figcaption></figcaption></figure><h2>Как организовывать код</h2><p>Давайте поговорим про способы организации кода — в случае указания через версию, например. Это подойдет к разным вариантам, но я объясню на примере последнего.</p><p>Мне хочется поддержать мнение о том, что код и организация архитектуры в целом не зависит от фреймворка. Хотя я это делал на Symfony, это можно сделать и на других фреймворках.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/f65/4ab/57f/f654ab57ff9863cee15ed5d502cfe731.png" height="879" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/f65/4ab/57f/f654ab57ff9863cee15ed5d502cfe731.png" width="1560"/><figcaption></figcaption></figure><p><strong>Структура директории.</strong> В примере вверху src, но может быть что угодно, зависит от вашей системы. На скриншоте — контроллер веб-запросов, выделенный в отдельную директорию. Потому что под контроллерами, особенно в современных архитектурах, подразумевают не только веб, но и много чего другого. Поэтому важно отделить веб от всего остального. Далее иерархично уходят контроллеры внешнего и внутреннего API.</p><p>Важно понимать, что внутренние\внешние API — это не правило, а особенность построения архитектуры в skyeng. В других компаниях наверняка есть такая же система, но важно оговориться, что это и зачем.</p><p>Внешний API — через который взаимодействуют клиенты, веб-клиенты, мобильные приложения, используются разные методы аутентификации. Внутренний API — с помощью которого взаимодействуют наши микросервисы. Этот API работает в локальной сети, там максимально простая авторизация через http. Безопасность гарантируется тем, что всё доступно только изнутри. Соответственно, домены для внешнего и для внутреннего API — разные.</p><p>Я попытался показать несколько вариантов, как можно организовать, в случае если у вас есть CRUD экшены. Они, как правило, версионируются вместе, то есть GET, POST, PUT и так далее кочуют от версии к версии. Иногда у вас есть экшн на одно действие, например регистрацию, когда CRUD предоставляет полноценный create, read, update, delete. В этом случае будет POST register, т.е. POST запрос. А в случае CRUD хочется иметь одинаковый response для всего набора, а в случае одиночных экшенов — сделать всё более гибко и понятно.</p><p>Почему одиночные экшены могут существовать, откуда они берутся и почему их можно версионировать? Приведём в пример случай регистрации. Регистрация не всегда касается только внутренней системы: закинул пользователя в базу и поехали дальше. Иногда его нужно сразу куда-то поместить — например, зарегистрировать во внешней реферальной системе, CRM.</p><p>Первая версия может обеспечивать регистрацию синхронно, вторая — асинхронно. Естественно, клиенту — браузеру или пользователю API — это нужно понимать и знать. Но при этом, если в случае CRUD’ов от первой версии можно будет в какой-то момент отказаться, то в случае с регистрацией от старых версий может и не получится отказаться. Потому что нужно иметь разные способы регистрации.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/fba/210/ab3/fba210ab3f9f51c793f6cf9826b4a3a8.png" height="872" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/fba/210/ab3/fba210ab3f9f51c793f6cf9826b4a3a8.png" width="1560"/><figcaption></figcaption></figure><p>Давайте посмотрим, что под капотом. Я предлагаю использовать подход, когда один контроллер — это один экшен. Таким образом контроллер получается чище, зона ответственности у него меньше, а при изменении одного экшена меняется только он, а не весь контроллер. Такой код надёжнее и стабильнее.</p><p>Есть экшен, у него конструктор. Есть метод, который принимает request и отдаёт response. Всю логику он делегирует внутрь сервиса ResponseFactory. Важно понимать, что контроллер не делает лишней бизнес-логики.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/5d8/7e7/c48/5d87e7c4872ea24d09abeb49eab753dd.png" height="872" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/5d8/7e7/c48/5d87e7c4872ea24d09abeb49eab753dd.png" width="1560"/><figcaption></figcaption></figure><p>Что из себя представляет ResponseFactory? Это сервис, который может свою работу сконцентрировать глубже, в конце сгенерировать response и выдать его, а бизнес-логику делегировать другому сервису.</p><p>Такая система — достаточно гибкая, универсальная для любого фреймворка вне зависимости от того, что используется — Symfony, Laravel или что-нибудь ещё. Главное организовать работу сервисов независимо друг от друга и гибкие изменения.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/e29/b81/aaf/e29b81aafb3d041440a71eca09e5db8c.png" height="879" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/e29/b81/aaf/e29b81aafb3d041440a71eca09e5db8c.png" width="1560"/><figcaption></figcaption></figure><p>Для организации документации я предлагаю подход, когда у вас в первую очередь выделяется домен: course, user, register и так далее, а затем версия. Таким образом документацию можно нормально сгруппировать и посмотреть. Swagger поддерживает deprecated и прочее, чтобы старые версии можно было отделить от новых, если они уже не поддерживаются.</p><h2>Сколько живут старые версии</h2><p>Чтобы определить, когда старую версию уже пора убирать, можно использовать мониторинг и alerting. </p><p>Для этого на мониторинге смотрим, как падает трафик на ваш запрос. Но сколько этого трафика должно быть — 0 или не 0 — решать непосредственно в продукте. Для каких-то систем 0 — это недостижимый идеал. Другим просто нужно чуть-чуть подождать, и 0 будет достигнут. Как ни банально, но — это индивидуально для каждого проекта.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/e88/448/9d0/e884489d0bdb6349def47536261b266b.png" height="330" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/e88/448/9d0/e884489d0bdb6349def47536261b266b.png" width="1852"/><figcaption></figcaption></figure><p>Как можно добиться скорейшего отказа от старой версии? Это тоже зависит от системы и подхода. Но если у вас API-продукт, то можно уведомить клиентов про переход на новую версию и поставить дедлайн, на который можно опираться, чтобы отказаться от старой. У нас в Skyeng клиенты в основном внутренние, мы приносим коллегам на планирование задачу по переезду на новую версию API, чтобы коллеги это делали не в спешном режиме, а запланировали на квартал. А через квартал старую версию просто убирают.</p><p>Есть ещё веб-клиенты, мобильные клиенты — их тоже можно пушить, чтобы они поменяли свою версию. У нас такая система реализована для фронтенда и мобильных устройств. Есть специальный конфиг в JSON, который хранится на сервере и содержит версию текущего приложения.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/ebc/ea2/04f/ebcea204f638123cc2df5aa7051f06cf.png" height="621" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/ebc/ea2/04f/ebcea204f638123cc2df5aa7051f06cf.png" width="1560"/><figcaption></figcaption></figure><p>Это стандартная система, когда есть мажорная, минорная и патч-версии. Чтобы изменить патч, делать ничего не нужно. Если мы меняем минор, можем показать пользователю уведомление, что пора обновить веб-приложение. В случае с мажорной версией — мы никого не спрашиваем, просто обновляем.</p><p>Конечно, надо это делать аккуратно, потому что пользователь может быть в процессе прохождения урока, написания сообщения. Если мы обновим веб-приложение в этот момент, можем получить негативную реакцию. Но если нет другого выбора, то ничего с этим не поделать.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/69e/147/8a5/69e1478a57f625e25a9d6a4427987df0.png" height="872" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/69e/147/8a5/69e1478a57f625e25a9d6a4427987df0.png" width="1560"/><figcaption></figcaption></figure><p>Выше немного фронтового кода. За скобками я оставил, как получается JSON и как проверяется версия. У нас это просто статичный JSON-файл, который лежит на сервере и запрашивается раз в 5 секунд.</p><p>Дальше читаем версию. Если это мажорная версия — обновляем, если минорная — показываем уведомление, в котором мягко предлагаем пользователю обновиться. Если пользователь соглашается — хорошо. Не соглашается — что-то может отвалиться, но это не будет критично.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/d36/6bd/d2d/d366bdd2d0b67bb2cf2a6501259d35be.png" height="873" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/d36/6bd/d2d/d366bdd2d0b67bb2cf2a6501259d35be.png" width="1560"/><figcaption></figcaption></figure><p>Говоря про мониторинг и алертинг, хочется упомянуть ещё одну систему — так называемую API management system. Напрямую это не относится к версионированию. Это скорее коробочное решение — набор инструментов, сервисов, которые позволяют создавать, анализировать, масштабировать API в своей среде.</p><p>API management system подойдёт для тех, кто предоставляет API как продукт, хочет получить всё и сразу, а не настраивать по отдельности. Он несёт в себе целый набор данных: мониторинг, лимиты, кеширование, тестирование, версионирование.</p><p>Всё настраивается через веб-интерфейс. Архитектура сервиса представляет из себя ядро, которое отвечает за формирование политик, настроек, курсов, файрволов, health check’ов, авторизации и так далее. Кроме ядра — веб-интерфейс, через который всё происходит, IP-шлюзы и прокси, отвечающие за обработку запросов от клиентов согласно политикам, backend API, отвечающие за обработку согласно бизнес-логике.</p><p>Достоинство такой системы — это абстракция над вашей реализацией. Вся аутентификация перекладываться на API management system. Кроме этого — на неё перекладывается управление трафиком, мониторинг, версионирование и даже преобразование API — запросов и ответов. То есть API management system может модифицировать backend и вернуть его исправленным.</p><p>Недостаток: стоимость поддержки такой системы возрастает, потому что тут владение происходит не только каким-то одним пакетом, проектом, а целой системой. И скорость работы такой системы ниже, чем если собрать всё самостоятельно. Потому что нужно всё это дело прогнать через все настройки. Наверное, если у вас дикий highload, это можно почувствовать. На стандартных приложениях разница будет практически не заметна.</p><h2>А можно не версионировать?</h2><p>Можно вообще не версионировать API? Короткий ответ — нет. Но, если очень хочется, если клиент вашего API — это ваш же фронтенд, то иногда можно обойтись и без него.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/c42/a22/2b0/c42a222b04f22e8459003df3078e508f.png" height="594" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/c42/a22/2b0/c42a222b04f22e8459003df3078e508f.png" width="1560"/><figcaption></figcaption></figure><p>Как это можно сделать? Например, у нас есть простой контракт. Есть ID сущности и name — допустим, это курс Python for beginners. И есть преподаватель Джон Смит, который этот курс составил и ведёт. Хотим сделать другой контракт, чтобы учителю добавилась аватарка. Сделать это можно в три этапа.</p><p>К исходному контракту добавляем какое-то промежуточное решение, а фронтенд заставляем работать с двумя полями — и с полем teacher, и с временным полем для имени и аватарки. Следующим шагом спиливаем промежуточное решение и настраиваем фронтенд так, чтобы он работал уже с новым контрактом.</p><figure class="full-width"><img data-src="https://habrastorage.org/getpro/habr/upload_files/f97/97c/91b/f9797c91b4601c43e7c176a8cda408ce.png" height="876" src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/f97/97c/91b/f9797c91b4601c43e7c176a8cda408ce.png" width="1560"/><figcaption></figcaption></figure><p>Таким образом в три этапа можно добиться изменения своего контракта, но без поддержки версий. Это работает в случае, если у вас один клиент. Или несколько, но вы ими всеми управляете.</p><p></p></div></div></div> <!-- --> <!-- --></div> <!-- --> <!-- --></div> <!-- --> <div class="tm-article-presenter__meta"><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Теги:</span> <ul class="tm-separated-list__list"><li class="tm-separated-list__item"><a class="tm-tags-list__link" href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5Bphp%5D">php</a></li><li class="tm-separated-list__item"><a class="tm-tags-list__link" href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5Bapi%5D">api</a></li><li class="tm-separated-list__item"><a class="tm-tags-list__link" href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5Brest%5D">rest</a></li><li class="tm-separated-list__item"><a class="tm-tags-list__link" href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5Barchitecture%5D">architecture</a></li></ul></div> <div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Хабы:</span> <ul class="tm-separated-list__list"><li class="tm-separated-list__item"><a class="tm-hubs-list__link router-link-active" href="/ru/company/skyeng/blog/">Блог компании Skyeng</a></li><li class="tm-separated-list__item"><a class="tm-hubs-list__link" href="/ru/hub/webdev/">Разработка веб-сайтов</a></li><li class="tm-separated-list__item"><a class="tm-hubs-list__link" href="/ru/hub/php/">PHP</a></li><li class="tm-separated-list__item"><a class="tm-hubs-list__link" href="/ru/hub/symfony/">Symfony</a></li></ul></div></div></article></div> <!-- --></div> <div class="tm-article-sticky-panel"><div class="tm-data-icons tm-article-sticky-panel__icons"><div class="tm-article-rating tm-data-icons__item"><div class="tm-votes-meter tm-article-rating__votes-switcher"><svg class="tm-svg-img tm-votes-meter__icon tm-votes-meter__icon tm-votes-meter__icon_appearance-article" height="24" width="24"><title>Всего голосов 15: ↑15 и ↓0</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#counter-rating"></use></svg> <span class="tm-votes-meter__value tm-votes-meter__value tm-votes-meter__value_positive tm-votes-meter__value_appearance-article tm-votes-meter__value_rating" title="Всего голосов 15: ↑15 и ↓0">+15</span></div> <div class="v-portal" style="display:none;"></div></div> <!-- --> <!-- --> <button class="bookmarks-button tm-data-icons__item" title="Добавить в закладки" type="button"><span class="tm-svg-icon__wrapper bookmarks-button__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Добавить в закладки</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#counter-favorite"></use></svg></span> <span class="bookmarks-button__counter" title="Количество пользователей, добавивших публикацию в закладки">
    19
  </span></button> <div class="tm-article-comments-counter-link tm-data-icons__item" title="Читать комментарии"><a class="tm-article-comments-counter-link__link" href="/ru/company/skyeng/blog/718374/comments/"><svg class="tm-svg-img tm-article-comments-counter-link__icon" height="24" width="24"><title>Комментарии</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#counter-comments"></use></svg> <span class="tm-article-comments-counter-link__value">
      3
    </span></a> <!-- --></div> <div class="tm-sharing tm-data-icons__item" title="Поделиться"><button class="tm-sharing__button" type="button"><svg class="tm-sharing__icon" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M13.8 13.8V18l7.2-6.6L13.8 5v3.9C5 8.9 3 18.6 3 18.6c2.5-4.4 6-4.8 10.8-4.8z" fill="currentColor"></path></svg></button> <div class="v-portal" style="display:none;"></div></div> <div class="v-portal" style="display:none;"></div></div> </div></div> <div class="v-portal" style="display:none;"></div> <div class="tm-article-presenter__footer"><div class="tm-article-blocks"><!-- --> <div></div> <section class="tm-block tm-block tm-block_spacing-bottom"><!-- --> <div class="tm-block__body tm-block__body tm-block__body_variant-balanced"><div class="tm-article-author"><div class="tm-article-author__company"><div class="tm-article-author__company-card"><div class="tm-company-snippet"><a class="tm-company-snippet__logo-link" href="/ru/company/skyeng/profile/"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" height="40" src="//habrastorage.org/getpro/habr/company/d09/2f9/6ad/d092f96ad17042a56b4614692bd6983c.jpg" width="40"/></div></a> <div class="tm-company-snippet__info"><a class="tm-company-snippet__title" href="/ru/company/skyeng/profile/">Skyeng</a> <div class="tm-company-snippet__description">Крутой edtech с удаленкой для айтишников</div></div></div> <div class="tm-article-author__buttons"><!-- --> <!-- --></div></div> <div class="tm-article-author__company-contacts"><a class="tm-article-author__contact" href="https://career.habr.com/companies/skyeng" rel="noopener" target="_blank">
      Хабр Карьера
    </a><a class="tm-article-author__contact" href="https://facebook.com/skyengteam" rel="noopener" target="_blank">
      Facebook
    </a><a class="tm-article-author__contact" href="https://telegram.me/teamleadleonid" rel="noopener" target="_blank">
      Telegram
    </a></div> <div class="tm-article-author__separator"></div></div> <div class="tm-user-card tm-article-author__user-card tm-user-card tm-user-card_variant-article"><div class="tm-user-card__info-container"><div class="tm-user-card__header"><div class="tm-user-card__header-data"><a class="tm-user-card__userpic tm-user-card__userpic_size-40" href="/ru/users/OlegMifle/"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" src="//habrastorage.org/getpro/habr/avatars/793/120/165/793120165280a5957b525e6a979933cc.jpg"/></div></a> <div class="tm-user-card__meta"><div class="tm-counter-container tm-karma tm-karma" title=" 8 голосов "><div class="tm-counter-container__header"><div class="tm-karma__votes tm-karma__votes_positive">
      8
    </div></div> <div class="tm-counter-container__footer"><div class="tm-karma__text">
      Карма
    </div> <div class="v-portal" style="display:none;"></div></div></div> <div class="tm-counter-container" title="Рейтинг пользователя"><div class="tm-counter-container__header"> <div class="tm-votes-lever tm-votes-lever tm-votes-lever_appearance-rating"><!-- --> <div class="tm-votes-lever__score tm-votes-lever__score tm-votes-lever__score_appearance-rating"><span class="tm-votes-lever__score-counter tm-votes-lever__score-counter tm-votes-lever__score-counter_rating">
        14.5
      </span></div> <!-- --></div></div> <div class="tm-counter-container__footer"><span class="tm-rating__text tm-rating__text">
      Рейтинг
    </span></div></div></div></div></div> <div class="tm-user-card__info tm-user-card__info tm-user-card__info_variant-article"><div class="tm-user-card__title tm-user-card__title tm-user-card__title_variant-article"><span class="tm-user-card__name tm-user-card__name tm-user-card__name_variant-article">Олег Мифле</span> <a class="tm-user-card__nickname tm-user-card__nickname tm-user-card__nickname_variant-article" href="/ru/users/OlegMifle/">
          @OlegMifle
        </a> <!-- --></div> <p class="tm-user-card__short-info tm-user-card__short-info tm-user-card__short-info_variant-article">php deveoper</p></div></div> <div class="tm-user-card__buttons tm-user-card__buttons tm-user-card__buttons_variant-article"><!-- --> <!-- --> <!-- --> <!-- --> <!-- --></div></div> <!-- --></div> <div class="v-portal" style="display:none;"></div></div> <!-- --></section> <!-- --> <div class="tm-article-blocks__comments"><div class="tm-article-page-comments"><div class="tm-article-comments-counter-link tm-article-comments-counter-button"><a class="tm-article-comments-counter-link__link tm-article-comments-counter-link__link_button-style" href="/ru/company/skyeng/blog/718374/comments/"><svg class="tm-svg-img tm-article-comments-counter-link__icon tm-article-comments-counter-link__icon_contrasted" height="24" width="24"><title>Комментарии</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#counter-comments"></use></svg> <span class="tm-article-comments-counter-link__value tm-article-comments-counter-link__value_contrasted">
       Комментарии 3 
    </span></a> <!-- --></div></div></div> <section class="tm-block tm-block tm-block_spacing-bottom"><header class="tm-block__header tm-block__header tm-block__header_variant-borderless"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title tm-block__title_variant-large">Публикации</h2> </div> <!-- --></header> <div class="tm-block__body tm-block__body tm-block__body_variant-condensed-slim"><div class="tm-tabs tm-tabs"><div><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link tm-tabs__tab-link_active tm-tabs__tab-link_slim">
        Лучшие за сутки
      </button></span><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link tm-tabs__tab-link_slim">
        Похожие
      </button></span></div> <!-- --></div> <div class="similar-and-daily__tab-view"><div><!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <div class="tm-placeholder-article-cards"><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div> <div class="tm-placeholder__user-date loads"></div></div> <div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div> <div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div> <div class="tm-placeholder-article-card__icons tm-placeholder__counters"><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div> <div class="tm-placeholder__user-date loads"></div></div> <div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div> <div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div> <div class="tm-placeholder-article-card__icons tm-placeholder__counters"><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div> <div class="tm-placeholder__user-date loads"></div></div> <div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div> <div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div> <div class="tm-placeholder-article-card__icons tm-placeholder__counters"><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div> <div class="tm-placeholder__user-date loads"></div></div> <div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div> <div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div> <div class="tm-placeholder-article-card__icons tm-placeholder__counters"><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div> <div class="tm-placeholder__user-date loads"></div></div> <div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div> <div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div> <div class="tm-placeholder-article-card__icons tm-placeholder__counters"><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div></div></div></div> <!-- --> <!-- --> <!-- --> <!-- --></div> <!-- --></div></div> <!-- --></section> <div><!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <div class="tm-placeholder-inset tm-placeholder-vacancies"><div class="tm-placeholder-inset__header"><div class="tm-placeholder__line tm-placeholder__line_inset-header loads"></div></div> <div class="tm-placeholder-inset__body"><ul class="tm-placeholder-list"><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div> <div class="tm-project-block-items__properties"><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div> <div class="tm-project-block-items__properties"><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div> <div class="tm-project-block-items__properties"><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div> <div class="tm-project-block-items__properties"><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div> <div class="tm-project-block-items__properties"><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span></div></li></ul></div> <div class="tm-placeholder-inset__footer"><div class="tm-placeholder__line tm-placeholder__line_inset-footer loads"></div></div></div> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --> <!-- --></div> <!-- --> </div></div></div></div></div> <div class="tm-page__sidebar"><!-- --></div></div></div></div></main> <!-- --></div> <!-- --> <div class="tm-footer"><div class="tm-page-width"><div class="tm-footer__container"><div class="tm-footer__title"><a class="tm-svg-icon__wrapper tm-footer__title-link router-link-active" href="/ru/"><svg class="tm-svg-img tm-svg-icon" height="16" width="16"><title>Хабр</title> <use xlink:href="/img/habr-logo-ru.svg#logo"></use></svg></a></div> <div class="tm-footer__social"><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://www.facebook.com/habrahabr.ru" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="16" width="16"><title>Facebook</title> <use xlink:href="/img/social-icons-sprite.svg#social-logo-facebook"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://twitter.com/habr_com" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="16" width="16"><title>Twitter</title> <use xlink:href="/img/social-icons-sprite.svg#social-logo-twitter"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://vk.com/habr" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="16" width="16"><title>VK</title> <use xlink:href="/img/social-icons-sprite.svg#social-logo-vkontakte"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://telegram.me/habr_com" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="16" width="16"><title>Telegram</title> <use xlink:href="/img/social-icons-sprite.svg#social-logo-telegram"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://www.youtube.com/channel/UCd_sTwKqVrweTt4oAKY5y4w" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="16" width="16"><title>Youtube</title> <use xlink:href="/img/social-icons-sprite.svg#social-logo-youtube"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://zen.yandex.ru/habr" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="16" width="16"><title>Яндекс Дзен</title> <use xlink:href="/img/social-icons-sprite.svg#social-logo-zen"></use></svg></a></div> <div class="v-portal" style="display:none;"></div> <button class="tm-footer__link"><svg class="tm-svg-img tm-footer__icon" height="16" width="16"><title>Язык</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#lang"></use></svg>
        Настройка языка
      </button> <a class="tm-footer__link" href="/ru/feedback/">
        Техническая поддержка
      </a> <a class="tm-footer__link" href="/berserk-mode-nope">
        Вернуться на старую версию
      </a> <div class="tm-footer-copyright"><span class="tm-copyright"><span class="tm-copyright__years">© 2006–2023, </span> <span class="tm-copyright__name"><a class="tm-copyright__link" href="https://company.habr.com/" rel="noopener" target="_blank">Habr</a></span></span></div></div></div></div> <!-- --> <!-- --></div> <div class="vue-portal-target"></div></div>








</body>
</html>
